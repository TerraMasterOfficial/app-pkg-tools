{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"x-tree\",\n  components: {\n    \"x-tab-app\": () => import(\"./x-tab-app\")\n  },\n\n  data() {\n    return {\n      styles: {\n        width: \"220px\"\n      }\n    };\n  },\n\n  methods: {\n    resize_frame(e) {\n      let _this = this;\n\n      let startwidth = parseInt(_this.styles.width),\n          startx = e.clientX || e.pageX,\n          maxwidth = 400;\n\n      document.onmousemove = e => {\n        let endx = e.clientX || e.pageX,\n            endwidth = endx - startx + startwidth;\n        if (endwidth < 220) endwidth = 220;\n        if (endwidth > maxwidth) endwidth = maxwidth;\n\n        _this.$set(_this.styles, \"width\", endwidth + \"px\");\n      };\n\n      document.onmouseup = () => {\n        document.onmousemove = null;\n      };\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;AAUA;EACAA,cADA;EAEAC;IAAA;EAAA,CAFA;;EAGAC;IACA;MACAC;QACAC;MADA;IADA;EAKA,CATA;;EAUAC;IACAC;MACA;;MACA;MAAA,IACAC,6BADA;MAAA,IAEAC,cAFA;;MAGAC;QACA;QAAA,IACAC,qCADA;QAEA;QACA;;QACAC;MACA,CANA;;MAOAF;QACAA;MACA,CAFA;IAGA;;EAhBA;AAVA","names":["name","components","data","styles","width","methods","resize_frame","startx","maxwidth","document","endwidth","_this"],"sourceRoot":"src/components","sources":["x-tree.vue"],"sourcesContent":["<template>\n    <div class=\"tos-dialog-left\" :style=\"styles\">\n        <div class=\"tos-dialog-left-resize\" @mousedown=\"resize_frame($event)\"></div>\n        <div class=\"tos-dialog-wrap-space\"></div>\n        <div class=\"tos-dialog-content\">\n            <x-tab-app v-on=\"$listeners\" v-bind=\"$attrs\"></x-tab-app>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    name: \"x-tree\",\n    components: {\"x-tab-app\":()=>import(\"./x-tab-app\")},\n    data() {\n        return {\n            styles: {\n                width: \"220px\",\n            },\n        };\n    },\n    methods: {\n        resize_frame(e) {\n            let _this = this;\n            let startwidth = parseInt(_this.styles.width),\n                startx = e.clientX || e.pageX,\n                maxwidth = 400;\n            document.onmousemove = (e) => {\n                let endx = e.clientX || e.pageX,\n                    endwidth = endx - startx + startwidth;\n                if (endwidth < 220) endwidth = 220;\n                if (endwidth > maxwidth) endwidth = maxwidth;\n                _this.$set(_this.styles, \"width\", endwidth + \"px\");\n            };\n            document.onmouseup = () => {\n                document.onmousemove = null;\n            };\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../util/scss/global\";\n.tos-dialog {\n    &-left {\n        width: 200px;\n        min-width: 220px;\n        border-radius: 6px 0 0 6px;\n        max-width: 400px;\n        @include flexcolumn(column);\n        position: relative;\n        background-color: $linkBgColor;\n        &-resize {\n            background: url(\"../assets/resize.png\") right center no-repeat;\n            @include custom_position(98, 0, -6px, 0, null);\n            width: 6px;\n            cursor: col-resize;\n            @include userselect;\n        }\n    }\n    &-wrap {\n        position: relative;\n        overflow: hidden;\n        width: 100%;\n        @include flexcolumn(row, null, stretch);\n        &-space {\n            height: 54px;\n            width: 100%;\n            flex-shrink: 0;\n        }\n    }\n    &-content {\n        flex: 1;\n        overflow: hidden;\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        border-bottom-right-radius: 8px;\n    }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}