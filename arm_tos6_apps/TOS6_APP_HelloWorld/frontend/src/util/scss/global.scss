@font-face {
    font-family: MyCustomFont;
    src: local(Verdana), local("微软雅黑");
    /* no unicode-range; default to all characters */
}
/*Latin characters 專用 */
@font-face {
    font-family: MyCustomFont; /* 同樣的 font-family */
    unicode-range: U+00-024F; /* Latin, Latin1 Sup., Ext-A, Ext-B */
    src: local(Helvetica), /* OS X preferred */ local(Arial); /* Other OS */
}
/* 注音符號專用*/
@font-face {
    font-family: MyCustomFont; /* 同樣的 font-family */
    unicode-range: U+3100-312F; /* Bopomofo */
    src: local(LiHei Pro), /* OS X */ local("Microsoft Yahei"), local("微软雅黑"); /* Windows Vista+ */
}
/* 日文假名專用 */
@font-face {
    font-family: MyCustomFont; /* 同樣的 font-family */
    unicode-range: U+3040-30FF; /* Hiragana, Katakana */
    src: local('MS PGothic'),local('MS UI Gothic'), /* OS X */ local(Meiryo); /* Windows Vista+ */
}
$font_family: "MyCustomFont";
@mixin fontname {
    font-family: $font_family;
}

@mixin userselect {
    user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
}

@mixin placeholder {
    &::-webkit-input-placeholder {
        color: #9f9f9f;
    }
    &:-moz-placeholder {
        color: #9f9f9f;
    }
    &::-moz-placeholder {
        color: #9f9f9f;
    }
    &:-ms-input-placeholder {
        color: #9f9f9f;
    }
}

$rembase: 14px;
$line_height_normal: 18px;
$line_height_medium: 24px;
$line_height_big: 30px;
$linkColor: #0e65b3;
$floatBgColor:#fff;
$floatBgShadow: rgb(119 115 115 / 50%) 1px 1px 3px;
$linkBgColor: #f0f0f0;
$white_color: rgb(255, 255, 255);
$gray_color: rgb(205, 205, 205);
$hover_bgc: rgba(0, 0, 0, 0.2);
$bg_color: rgb(215, 215, 215);
$bg_hover_color: rgb(230, 230, 230);
$shadow-color: rgba(0, 0, 0, 0.4);
$nav-gradient: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0));
$dialog-gradient: linear-gradient(to bottom, $hover_bgc, $white_color, $white_color);
@function white_opacity_color($opacity: 100%) {
    @return rgba(255, 255, 255, $opacity);
}

@function black_opacity_color($opacity: 100%) {
    @return rgba(0, 0, 0, $opacity);
}

@mixin float_layout() {
    box-shadow: $floatBgShadow;
    background-color: $floatBgColor;
}

@mixin custom_mask($url, $size: 100%) {
    mask: url($url) no-repeat center center;
    mask-size: $size;
    -webkit-mask: url($url) no-repeat center center;
    -webkit-mask-size: $size;
}

@mixin transform($property) {
    transform: $property;
    -webkit-transform: $property;
    -moz-transform: $property;
    -ms-transform: $property;
}

@mixin transition($p...) {
    transition: $p;
    -webkit-transition: $p;
    -moz-transition: $p;
    -o-transition: $p;
}

@mixin transition-cls($p, $duration: 0.5s, $delay: 0.3s) {
    -moz-transition-property: $p;
    -o-transition-property: $p;
    -webkit-transition-property: $p;
    transition-property: $p;
    -moz-transition-duration: $duration;
    -o-transition-duration: $duration;
    -webkit-transition-duration: $duration;
    transition-duration: $duration;
    -moz-transition-delay: $delay;
    -o-transition-delay: $delay;
    -webkit-transition-delay: $delay;
    transition-delay: $delay;
}

@mixin SecondaryTitle() {
    line-height: 40px;
    font-weight: 600;
    font-size: 14px;
    color: #000;
    &:not(:first-child){
        padding-top: 6px;
    }
}
@mixin SecondaryTitlet() {
    font-weight: 600;
    font-size: 14px;
    color: #0992f6;
}

@mixin height($value) {
    height: $value;
}

@mixin borderbox {
    box-sizing: border-box;
}

@mixin border_radius($PX: 5px) {
    border-radius: $PX;
}

@mixin flexcolumn($direct, $justify: space-between, $align: null) {
    display: flex;
    flex-direction: $direct;
    @if $justify != null {
        justify-content: $justify;
    }
    @if $align != null {
        align-items: $align;
    }
}

@mixin box_shadow($left) {
    @if $left {
        box-shadow: -2px 2px 6px 0px $shadow-color;
    } @else {
        box-shadow: 0px 0px 6px 3px $shadow-color;
    }
}

@mixin text_shadow {
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
}

@mixin border-all($p...) {
    border: $p;
    @include borderbox;
}

@mixin border-left-right($value, $rw) {
    border-top: none;
    border-bottom: none;
    @if $value == "left" or $value == "both" {
        border-left: 1px solid rgba(255, 255, 255, 0.3);
    } @else {
        border-left: none;
    }
    @if $value == "right" or $value == "both" {
        border-right: $rw solid rgba(255, 255, 255, 0.3);
    } @else {
        border-right: none;
    }
}

@mixin task-bg {
    background: rgba(0, 0, 0, 0.3) 0 0 repeat-x;
}

@mixin icons_setting($width, $height, $margin: null, $bgs: 100%) {
    display: block;
    @if $margin == null {
        margin: 0 auto;
    } @else {
        margin: $margin;
    }
    width: $width;
    height: $height;
    background-size: $bgs;
    background-position: center center;
    background-repeat: no-repeat;
}

@mixin line-split($value) {
    border-top: 1px solid rgba(0, 0, 0, 0.1);
    margin: $value 0;
}

@mixin transition($time) {
    transition: all $time;
    -webkit-transition: all $time;
    -moz-transition: all $time;
    -o-transition: all $time;
}

@mixin opacity($val) {
    opacity: $val;
    -moz-opacity: $val;
}

@mixin custom_position($index, $top: null, $right: null, $bottom: null, $left: null) {
    position: absolute;
    z-index: $index;
    @if ($right!= "" & & $right!=null) {
        right: $right;
    }
    @if ($top!= "" & & $top!=null) {
        top: $top;
    }
    @if ($bottom!= "" & & $bottom!=null) {
        bottom: $bottom;
    }
    @if ($left!= "" & & $left!=null) {
        left: $left;
    }
}

@mixin custom_size($width: null, $height: null) {
    @if ($width!= "" & & $width!=null) {
        width: $width;
    }
    @if ($height!= "" & & $height!=null) {
        height: $height;
    }
}

@mixin custom_calc_height($total, $dec) {
    height: calc(#{$total} - #{$dec});
    height: -moz-calc(#{$total} - #{$dec});
    height: -webkit-calc(#{$total} - #{$dec});
}

@keyframes bounce-up {
    25% {
        transform: translateX(10px);
    }
    75% {
        transform: translateX(-10px);
    }
    50%,
    100% {
        transform: translateX(0);
    }
}

@keyframes scale {
    0% {
        transform: scale(0);
        opacity: 0;
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes hd {
    from {
        box-shadow: none;
    }

    20% {
        box-shadow: 3px 0 0 currentColor;
    }

    40% {
        box-shadow: 3px 0 0 currentColor, 13px 0 0 currentColor;
    }

    60% {
        box-shadow: 3px 0 0 currentColor, 13px 0 0 currentColor, 23px 0 0 currentColor;
    }

    80% {
        box-shadow: 3px 0 0 currentColor, 13px 0 0 currentColor, 23px 0 0 currentColor, 33px 0 0 currentColor;
    }

    98% {
        box-shadow: 3px 0 0 currentColor, 13px 0 0 currentColor, 23px 0 0 currentColor, 33px 0 0 currentColor, 43px 0 0 currentColor;
    }
}
