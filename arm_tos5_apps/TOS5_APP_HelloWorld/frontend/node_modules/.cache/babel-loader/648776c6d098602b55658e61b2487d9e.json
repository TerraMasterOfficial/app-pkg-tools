{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n\nconst throttle = (fn, delay) => {\n  // fn节流函数 delay 秒数 ms\n  var timeout = null;\n  if (timeout) clearTimeout(timeout);\n  timeout = setTimeout(() => {\n    fn();\n  }, delay || 500);\n};\n\nconst debounce = (fn, delay) => {\n  // fn防抖函数 delay 秒数 ms\n  let timer = null;\n  return function () {\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(fn, delay || 500);\n  };\n};\n/**\n * 解决Vue Template模板中无法使用可选链的问题\n */\n\n\nconst optionalChaining = (obj, ...rest) => {\n  let tmp = obj;\n\n  for (let key in rest) {\n    let name = rest[key]; // eslint-disable-next-line no-prototype-builtins\n\n    if (tmp.hasOwnProperty(name)) {\n      tmp = tmp[name];\n    }\n  }\n\n  return tmp || \"\";\n};\n\nconst crontab = (obj, time) => {\n  // linux时间转换时间 obj:需要转换的值 time:当前选中的时间\n  obj = JSON.parse(JSON.stringify(obj));\n  if (time == \"baknow\") return \"immediately\";\n  let crontabTime = [\"0\", \"0\", \"*\", \"*\", \"*\"]; // 分钟  小时 一个月中的第几天 月份 星期几\n\n  let timeMap = new Map([[\"Everyday\", () => {}], [\"EveryMonth\", () => {\n    crontabTime[2] = obj.month;\n  }], [\"EveryWeek\", () => {\n    crontabTime[4] = obj.week;\n  }]]);\n  timeMap.get(time)();\n  obj.time = obj.time.split(\":\");\n  crontabTime[1] = obj.time[0] != \"00\" ? obj.time[0] : \"*\";\n  crontabTime[0] = obj.time[1] != \"00\" ? obj.time[1] : \"*\";\n  return crontabTime;\n};\n/**\n * dateTimeFormat  日期格式化\n * @readonly  例：2021-05-19T15:05:11.223428395+08:00\n * @param {String} format  日期格式\n * @param {String} data  日期参数\n */\n\n\nconst dateTimeFormat = (format, date) => {\n  let result = \"\";\n  date = new Date(date);\n  const options = {\n    \"Y+\": date.getFullYear().toString(),\n    // 年\n    \"m+\": (date.getMonth() + 1).toString(),\n    // 月\n    \"d+\": date.getDate().toString(),\n    // 日\n    \"H+\": date.getHours().toString(),\n    // 时\n    \"M+\": date.getMinutes().toString(),\n    // 分\n    \"S+\": date.getSeconds().toString() // 秒\n\n  };\n\n  for (let key in options) {\n    result = new RegExp(\"(\" + key + \")\").exec(format);\n\n    if (result) {\n      format = format.replace(result[1], result[1].length == 1 ? options[key] : options[key].padStart(result[1].length, \"0\"));\n    }\n  }\n\n  return format;\n};\n/**\n * formatUTC  UTC日期格式化\n * @readonly  例：2021-07-15T09:53:17Z\n * @param {String} utc_datetime  UTC日期\n */\n\n\nconst formatUTC = utc_datetime => {\n  // 转为正常的时间格式 年-月-日 时:分\n  let T_pos = utc_datetime.indexOf(\"T\"),\n      y_m_d = utc_datetime.substr(0, T_pos),\n      h_m_s = utc_datetime.substring(T_pos + 1, T_pos + 6);\n  return y_m_d + \" \" + h_m_s;\n};\n\nconst FindSubStringCounts = (str, sub) => {\n  let num = 0;\n\n  while (str.indexOf(sub) !== -1) {\n    str = str.slice(str.indexOf(sub) + 1);\n    num += 1;\n  }\n\n  return num;\n};\n\nfunction Sprintf() {\n  let args = arguments,\n      string = args[0];\n\n  for (let i = 1; i < args.length; i++) {\n    let item = arguments[i];\n    string = string.replace(\"%s\", item);\n  }\n\n  return string;\n}\n\nconst FindArrayIndex = (array, id, value) => {\n  for (let i in array) {\n    if (array[i][id] == value) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\nconst FilePathDir = path => {\n  let fp = path.split(\"/\");\n  fp.pop();\n  return fp.join(\"/\");\n};\n\nconst FindObjectIndex = (val, obj) => {\n  let index = 0;\n\n  for (const key in obj) {\n    if (obj.key == val) {\n      index = key;\n    }\n  }\n\n  return index;\n};\n\nconst findArray = (value, list, id) => {\n  let array = [];\n  list.forEach((val, i) => {\n    if (value instanceof Array) {\n      if (value.includes(val[id])) {\n        array.push(i);\n      }\n    } else if (value == val[id]) {\n      array.push(i);\n    }\n  });\n  return array;\n};\n\nconst FindArrayStartWith = (arr, key) => {\n  for (let item of arr) {\n    if (item.startWith(key)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst DeepCopy = obj => {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nconst transKbToGb = value => {\n  return (value / 1024 / 1024).toFixed(2);\n};\n\nexport { throttle, findArray, FindObjectIndex, optionalChaining, debounce, crontab, dateTimeFormat, FindSubStringCounts, Sprintf, FindArrayIndex, FilePathDir, transKbToGb, DeepCopy, FindArrayStartWith, formatUTC };","map":{"version":3,"names":["throttle","fn","delay","timeout","clearTimeout","setTimeout","debounce","timer","optionalChaining","obj","rest","tmp","key","name","hasOwnProperty","crontab","time","JSON","parse","stringify","crontabTime","timeMap","Map","month","week","get","split","dateTimeFormat","format","date","result","Date","options","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","RegExp","exec","replace","length","padStart","formatUTC","utc_datetime","T_pos","indexOf","y_m_d","substr","h_m_s","substring","FindSubStringCounts","str","sub","num","slice","Sprintf","args","arguments","string","i","item","FindArrayIndex","array","id","value","FilePathDir","path","fp","pop","join","FindObjectIndex","val","index","findArray","list","forEach","Array","includes","push","FindArrayStartWith","arr","startWith","DeepCopy","transKbToGb","toFixed"],"sources":["/home/yanlin/works/app-pkg-tools/x64_tos5_apps/HelloTOS5/frontend/src/util/util.js"],"sourcesContent":["const throttle = (fn, delay) => {\n    // fn节流函数 delay 秒数 ms\n    var timeout = null;\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => {\n        fn();\n    }, delay || 500);\n};\nconst debounce = (fn, delay) => {\n    // fn防抖函数 delay 秒数 ms\n    let timer = null;\n    return function () {\n        if (timer) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(fn, delay || 500);\n    };\n};\n/**\n * 解决Vue Template模板中无法使用可选链的问题\n */\nconst optionalChaining = (obj, ...rest) => {\n    let tmp = obj;\n    for (let key in rest) {\n        let name = rest[key];\n        // eslint-disable-next-line no-prototype-builtins\n        if (tmp.hasOwnProperty(name)) {\n            tmp = tmp[name];\n        }\n    }\n    return tmp || \"\";\n};\n\nconst crontab = (obj, time) => {\n    // linux时间转换时间 obj:需要转换的值 time:当前选中的时间\n    obj = JSON.parse(JSON.stringify(obj));\n    if (time == \"baknow\") return \"immediately\";\n    let crontabTime = [\"0\", \"0\", \"*\", \"*\", \"*\"]; // 分钟  小时 一个月中的第几天 月份 星期几\n    let timeMap = new Map([\n        [\"Everyday\", () => {}],\n        [\n            \"EveryMonth\",\n            () => {\n                crontabTime[2] = obj.month;\n            },\n        ],\n        [\n            \"EveryWeek\",\n            () => {\n                crontabTime[4] = obj.week;\n            },\n        ],\n    ]);\n    timeMap.get(time)();\n    obj.time = obj.time.split(\":\");\n    crontabTime[1] = obj.time[0] != \"00\" ? obj.time[0] : \"*\";\n    crontabTime[0] = obj.time[1] != \"00\" ? obj.time[1] : \"*\";\n    return crontabTime;\n};\n\n/**\n * dateTimeFormat  日期格式化\n * @readonly  例：2021-05-19T15:05:11.223428395+08:00\n * @param {String} format  日期格式\n * @param {String} data  日期参数\n */\nconst dateTimeFormat = (format, date) => {\n    let result = \"\";\n    date = new Date(date);\n    const options = {\n        \"Y+\": date.getFullYear().toString(), // 年\n        \"m+\": (date.getMonth() + 1).toString(), // 月\n        \"d+\": date.getDate().toString(), // 日\n        \"H+\": date.getHours().toString(), // 时\n        \"M+\": date.getMinutes().toString(), // 分\n        \"S+\": date.getSeconds().toString(), // 秒\n    };\n    for (let key in options) {\n        result = new RegExp(\"(\" + key + \")\").exec(format);\n        if (result) {\n            format = format.replace(\n                result[1],\n                result[1].length == 1\n                    ? options[key]\n                    : options[key].padStart(result[1].length, \"0\")\n            );\n        }\n    }\n    return format;\n};\n\n/**\n * formatUTC  UTC日期格式化\n * @readonly  例：2021-07-15T09:53:17Z\n * @param {String} utc_datetime  UTC日期\n */\nconst formatUTC = (utc_datetime) => {\n    // 转为正常的时间格式 年-月-日 时:分\n    let T_pos = utc_datetime.indexOf(\"T\"),\n        y_m_d = utc_datetime.substr(0, T_pos),\n        h_m_s = utc_datetime.substring(T_pos + 1, T_pos + 6);\n\n    return y_m_d + \" \" + h_m_s;\n};\n\nconst FindSubStringCounts = (str, sub) => {\n    let num = 0;\n    while (str.indexOf(sub) !== -1) {\n        str = str.slice(str.indexOf(sub) + 1);\n        num += 1;\n    }\n    return num;\n};\nfunction Sprintf() {\n    let args = arguments,\n        string = args[0];\n    for (let i = 1; i < args.length; i++) {\n        let item = arguments[i];\n        string = string.replace(\"%s\", item);\n    }\n    return string;\n}\nconst FindArrayIndex = (array, id, value) => {\n    for (let i in array) {\n        if (array[i][id] == value) {\n            return i;\n        }\n    }\n    return -1;\n};\nconst FilePathDir = (path) => {\n    let fp = path.split(\"/\");\n    fp.pop();\n    return fp.join(\"/\");\n};\nconst FindObjectIndex = (val, obj) => {\n    let index = 0;\n    for (const key in obj) {\n        if (obj.key == val) {\n            index = key;\n        }\n    }\n    return index;\n};\nconst findArray = (value, list, id) => {\n    let array = [];\n    list.forEach((val, i) => {\n        if (value instanceof Array) {\n            if (value.includes(val[id])) {\n                array.push(i);\n            }\n        } else if (value == val[id]) {\n            array.push(i);\n        }\n    });\n    return array;\n};\nconst FindArrayStartWith = (arr, key) => {\n    for (let item of arr) {\n        if (item.startWith(key)) {\n            return true;\n        }\n    }\n    return false;\n};\nconst DeepCopy = (obj) => {\n    return JSON.parse(JSON.stringify(obj));\n};\nconst transKbToGb = (value) => {\n    return (value / 1024 / 1024).toFixed(2);\n};\nexport {\n    throttle,\n    findArray,\n    FindObjectIndex,\n    optionalChaining,\n    debounce,\n    crontab,\n    dateTimeFormat,\n    FindSubStringCounts,\n    Sprintf,\n    FindArrayIndex,\n    FilePathDir,\n    transKbToGb,\n    DeepCopy,\n    FindArrayStartWith,\n    formatUTC,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}